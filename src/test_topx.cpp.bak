/*
 * =====================================================================================
 *
 *       Filename:  test_topx.cpp
 *
 *    Description:  test
 *
 *        Version:  1.0
 *        Created:  2015-06-30 11:52:42
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  zhiyuan (search engine group), zhiyuan@taobao.com
 *        Company:  www.taobao.com
 *
 * =====================================================================================
 */

#include"LogsCount.h"
#include<iostream>
#include"TopX.h"
#include"LogInfor.h"
#include<vector>
#include<cstdio>
#include<cstdlib>
#include<ctime>


using namespace std;
void prt(vector<LogInfor>& datavec)
{
    vector<LogInfor>::iterator it = datavec.end() - 1000;
    vector<LogInfor>::iterator end = datavec.end();
    int flage = 0;
    for (; it != end; ++it, ++flage)
    {
        cout << it->m_count << "   ";
        if (flage %10 == 0)
            cout << endl;
    }
}

int main()
{
    LogsCount logscount;
    vector<LogInfor> datavec;

    vector<string> datasrc;

    srand((int)time(NULL));

    char tmp[1024];
    string strTmp;
    for(int i = 0; i < 50000000; ++i)
    {
        //loginfor.m_count = rand();
        //datavec.push_back(loginfor);
        sprintf(tmp, "%d1111111111111111111111111111111111111111111111111111111111111111111111111111111111112222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222", (rand() + rand())%1000000 );
        strTmp = tmp;
        datasrc.push_back(strTmp);
    }

    cout << "start logcount" << endl;

    vector<string>::iterator it = datasrc.begin();
    vector<string>::iterator end = datasrc.end();

    time_t beginTime = time(0);

    for (; it != end; ++it)
    {
        logscount.ProcessLog(*it);
    }

    time_t countEndTime = time(0);
    cout << "count time: " << countEndTime - beginTime << endl;

    logscount.GetCountResult(datavec);

    cout << "size after logscount: " << datavec.size() << endl;
    
    //cout << "befor find" << endl;
    //prt(datavec);
    //cout << endl;

    TopX_partion topx;
    topx.SetDataSource(&datavec);

    cout << "start findtopx" << endl;
    topx.FindTopX(10000);

    time_t findTopTime = time(0);

    cout << "Find topX time : " << findTopTime - countEndTime << endl;
    //cout << endl;
    //cout << "after" << endl;

    //prt(datavec);
    cout << "finish" << endl;
}
